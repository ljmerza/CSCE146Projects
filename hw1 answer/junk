/*********************************************************************
 * Method to compare the <code>name</code> values of records.
 * Note that we are relying here on the fact that we know that the
 * <code>name</code> is data of <code>String</code> type.
 *
 * @return -1, 0, or +1 according as the comparison goes.
**/
  public int compareTo(Record that)
  {
    int returnValue;

    returnValue = 0;

    if(this.getName().compareTo(that.getName()) < 0)
    {
      returnValue = -1;
    }
    else if(this.getName().compareTo(that.getName()) > 0)
    {
      returnValue = +1;
    }
    else
    {
      returnValue = 0;
    }

    return returnValue;
  } // public int compareTo(Record that)

/*********************************************************************
 * Method to override the <code>equals</code> method.
 * We will declare two records to be equal if their data values are 
 * equal, not if they are identical objects.
 *
 * @return boolean answer to the question.
**/
  public boolean equals(Record that)
  {
    boolean returnValue;

    returnValue = true;

    returnValue = returnValue && this.getName().equals(that.getName());
    returnValue = returnValue && this.getOffice().equals(that.getOffice());
    returnValue = returnValue && this.getPhone().equals(that.getPhone());
    returnValue = returnValue && (this.getTeaching() == that.getTeaching());

    return returnValue;
  } // public boolean equals(Record that)

